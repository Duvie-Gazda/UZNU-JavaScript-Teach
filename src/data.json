[
    {
        "id": 1,
        "article": {
            "id": 1,
            "title": "Вступ до JavaScript",
            "text": "<h1>Вступ до JavaScript</h1>\n    \n    <p>JavaScript є мовою програмування, що використовується для створення динамічних веб-сайтів та веб-додатків.</p>\n\n    <h2>Що таке JavaScript?</h2>\n\n    <p>JavaScript є однією з найпопулярніших мов програмування, що використовуються для розробки веб-додатків та веб-сайтів. JavaScript зазвичай використовується для створення веб-сторінок, що мають різні ефекти та інтерактивність, такі як рухомі кнопки, форми, меню та багато іншого.</p>\n\n    <h2>Як використовувати JavaScript?</h2>\n\n    <p>JavaScript можна використовувати прямо в HTML-коді в тегах <code>&lt;script&gt;</code>. Наприклад:</p>\n\n    <pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Мій перший JavaScript&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Привіт, світ!&lt;/h1&gt;\n    &lt;script&gt;\n        alert('Hello, world!');\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n    <p>У цьому прикладі ми використовуємо вбудований JavaScript-об'єкт <code>alert()</code> для створення спливаючого вікна з повідомленням \"Hello, world!\".</p>\n\n    <h2>Заключні слова</h2>\n\n    <p>JavaScript є потужним інструментом для розробки динамічних веб-сайтів та веб-додатків. Надіємось, цей вступний урок допоміг вам краще зрозуміти, що таке JavaScript та як його використовувати в розробці веб-додатків.</p>\n"
        },
        "exam": {
            "id": 1,
            "questions": [
                {
                    "id": 1,
                    "title": "Що таке JavaScript?",
                    "answers": [
                        {
                            "id": 2,
                            "text": "Операційна система для серверів.",
                            "correct": false
                        },
                        {
                            "id": 1,
                            "text": "Мова програмування для створення динамічних веб-сайтів та веб-додатків.",
                            "correct": true
                        },
                        {
                            "id": 3,
                            "text": "Редактор коду для фронтенд-розробки.",
                            "correct": false
                        }
                    ]
                },
                {
                    "id": 2,
                    "title": "Які основні характеристики мови JavaScript?",
                    "answers": [
                        {
                            "id": 5,
                            "text": "Мова з низьким рівнем абстракції, що не підтримує об'єктно-орієнтоване програмування.",
                            "correct": false
                        },
                        {
                            "id": 6,
                            "text": "Мова з жорсткою типізацією, що не дозволяє змінювати тип змінних.",
                            "correct": false
                        },
                        {
                            "id": 4,
                            "text": "Високорівнева мова, що має динамічну типізацію і підтримує об'єктно-орієнтоване програмування.",
                            "correct": true
                        }
                    ]
                },
                {
                    "id": 3,
                    "title": "Для чого використовується JavaScript?",
                    "answers": [
                        {
                            "id": 7,
                            "text": "Для створення динамічних веб-сайтів та веб-додатків.",
                            "correct": true
                        },
                        {
                            "id": 8,
                            "text": "Для створення віджетів на робочому столі комп'ютера.",
                            "correct": false
                        },
                        {
                            "id": 9,
                            "text": "Для написання серверного програмного забезпечення.",
                            "correct": false
                        }
                    ]
                }
            ]
        }
    },
    {
        "id": 2,
        "article": {
            "id": 2,
            "title": "Змінні в JavaScript",
            "text": " <h1>Змінні в JavaScript</h1> <p>У JavaScript змінні використовуються для зберігання значень та даних. Змінні можуть зберігати будь-який тип даних, включаючи числа, рядки, булеві значення, масиви та об'єкти.</p> <h2>Створення змінних</h2> <p>У JavaScript змінні створюються за допомогою ключового слова <code>let</code>, за яким слідує ім'я змінної та опціональне значення, яке необов'язково вказувати. Наприклад:</p> <pre><code>let name = \"John\"; let age = 25; let isStudent = true;</code></pre> <p>У цьому прикладі ми створюємо три змінні: <code>name</code> типу рядок зі значенням \"John\", <code>age</code> типу число зі значенням 25 та <code>isStudent</code> типу булеве значення зі значенням <code>true</code>.</p> <p>Ім'я змінної може складатись з літер, цифр, знаків підкреслення та дефісів, але не може починатись з цифри. Імена змінних регістрозалежні.</p> <h2>Типи даних</h2> <p>У JavaScript існує кілька типів даних, які можуть бути збережені у змінній:</p> <ul> <li>Число: цілі числа та числа з плаваючою комою</li> <li>Рядок: текстові дані</li> <li>Булеві значення: <code>true</code> або <code>false</code></li> <li>Масив: колекція значень</li> <li>Об'єкт: колекція ключ-значення пар</li> <li>Null: спеціальне значення, що вказує на те, що змінна має порожнє знач </ul> <h2>Створення змінних в JavaScript</h2> <p>В JavaScript змінні можна створювати за допомогою ключового слова <code>let</code>, <code>let</code> та <code>const</code>.</p> <h3>Змінні let</h3> <p>Ключове слово <code>let</code> використовується для створення змінних, які можуть бути доступні в будь-якій частині програми.</p> <pre><code>let myVariable = \"Hello, world!\"; console.log(myVariable); // виведе \"Hello, world!\" в консоль</code></pre> <p>У цьому прикладі ми створили змінну з ім'ям <code>myVariable</code> та присвоїли їй значення рядка \"Hello, world!\". За допомогою функції <code>console.log()</code> ми вивели значення змінної в консоль.</p> <h3>Змінні let</h3> <p>Ключове слово <code>let</code> використовується для створення змінних, які мають блочну область видимості. Це означає, що змінна буде доступна тільки в межах блоку, в якому вона була створена.</p> <pre><code>if (true) { let myVariable = \"Hello, world!\"; console.log(myVariable); // виведе \"Hello, world!\" в консоль <br>console.log(myVariable); // виведе помилку, тому що myVariable не існує в цій області видимості</code></pre> <p>У цьому прикладі ми створили змінну з ім'ям <code>myVariable</code> за допомогою ключового слова <code>let</code> в межах блоку <code>if</code>. Після закінчення виконання блоку, змінна <code>myVariable</code> стає недоступною, тому що вона має блочну область видимості.</p> <h3>Змінні const</h3> <p>Ключове слово <code>const</code> використовується для створення змінних, які мають незмінне значення. Тобто, значення, присвоєне змінній, не може бути змі "
        },
        "exam": {
            "id": 2,
            "questions": [
                {
                    "id": 1,
                    "title": "Що таке змінні в JavaScript?",
                    "answers": [
                        {
                            "id": 1,
                            "text": "Це іменовані контейнери для зберігання даних.",
                            "correct": true
                        },
                        {
                            "id": 2,
                            "text": "Це функції, що повертають значення.",
                            "correct": false
                        },
                        {
                            "id": 3,
                            "text": "Це оператори, що виконують арифметичні операції.",
                            "correct": false
                        }
                    ]
                },
                {
                    "id": 2,
                    "title": "Які типи даних підтримуються в JavaScript?",
                    "answers": [
                        {
                            "id": 5,
                            "text": "Тільки числа, рядки і булеві значення.",
                            "correct": false
                        },
                        {
                            "id": 4,
                            "text": "Числа, рядки, булеві значення, об'єкти, масиви, null і undefined.",
                            "correct": true
                        },
                        {
                            "id": 6,
                            "text": "Тільки числа, рядки і об'єкти.",
                            "correct": false
                        }
                    ]
                },
                {
                    "id": 3,
                    "title": "Які правила існують для створення імен змінних в JavaScript?",
                    "answers": [
                        {
                            "id": 8,
                            "text": "Ім'я змінної може містити тільки букви і символ _.",
                            "correct": false
                        },
                        {
                            "id": 9,
                            "text": "Ім'я змінної може містити тільки цифри і символ _.",
                            "correct": false
                        },
                        {
                            "id": 7,
                            "text": "Ім'я змінної повинно починатись з літери або символу _ і може містити букви, цифри і символ _.",
                            "correct": true
                        }
                    ]
                }
            ]
        }
    }
]